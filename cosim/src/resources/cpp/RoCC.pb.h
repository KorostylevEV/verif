// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoCC.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_RoCC_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_RoCC_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_RoCC_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_RoCC_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_RoCC_2eproto;
namespace verif {
class RoCCCommand;
class RoCCCommandDefaultTypeInternal;
extern RoCCCommandDefaultTypeInternal _RoCCCommand_default_instance_;
class RoCCCommandAck;
class RoCCCommandAckDefaultTypeInternal;
extern RoCCCommandAckDefaultTypeInternal _RoCCCommandAck_default_instance_;
class RoCCInstruction;
class RoCCInstructionDefaultTypeInternal;
extern RoCCInstructionDefaultTypeInternal _RoCCInstruction_default_instance_;
class RoCCResponse;
class RoCCResponseDefaultTypeInternal;
extern RoCCResponseDefaultTypeInternal _RoCCResponse_default_instance_;
}  // namespace verif
PROTOBUF_NAMESPACE_OPEN
template<> ::verif::RoCCCommand* Arena::CreateMaybeMessage<::verif::RoCCCommand>(Arena*);
template<> ::verif::RoCCCommandAck* Arena::CreateMaybeMessage<::verif::RoCCCommandAck>(Arena*);
template<> ::verif::RoCCInstruction* Arena::CreateMaybeMessage<::verif::RoCCInstruction>(Arena*);
template<> ::verif::RoCCResponse* Arena::CreateMaybeMessage<::verif::RoCCResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace verif {

// ===================================================================

class RoCCCommandAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:verif.RoCCCommandAck) */ {
 public:
  RoCCCommandAck();
  virtual ~RoCCCommandAck();

  RoCCCommandAck(const RoCCCommandAck& from);
  RoCCCommandAck(RoCCCommandAck&& from) noexcept
    : RoCCCommandAck() {
    *this = ::std::move(from);
  }

  inline RoCCCommandAck& operator=(const RoCCCommandAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoCCCommandAck& operator=(RoCCCommandAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoCCCommandAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoCCCommandAck* internal_default_instance() {
    return reinterpret_cast<const RoCCCommandAck*>(
               &_RoCCCommandAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RoCCCommandAck& a, RoCCCommandAck& b) {
    a.Swap(&b);
  }
  inline void Swap(RoCCCommandAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoCCCommandAck* New() const final {
    return CreateMaybeMessage<RoCCCommandAck>(nullptr);
  }

  RoCCCommandAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoCCCommandAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoCCCommandAck& from);
  void MergeFrom(const RoCCCommandAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoCCCommandAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "verif.RoCCCommandAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoCC_2eproto);
    return ::descriptor_table_RoCC_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAckFieldNumber = 1,
  };
  // uint32 ack = 1;
  void clear_ack();
  ::PROTOBUF_NAMESPACE_ID::uint32 ack() const;
  void set_ack(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ack() const;
  void _internal_set_ack(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:verif.RoCCCommandAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ack_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoCC_2eproto;
};
// -------------------------------------------------------------------

class RoCCInstruction :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:verif.RoCCInstruction) */ {
 public:
  RoCCInstruction();
  virtual ~RoCCInstruction();

  RoCCInstruction(const RoCCInstruction& from);
  RoCCInstruction(RoCCInstruction&& from) noexcept
    : RoCCInstruction() {
    *this = ::std::move(from);
  }

  inline RoCCInstruction& operator=(const RoCCInstruction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoCCInstruction& operator=(RoCCInstruction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoCCInstruction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoCCInstruction* internal_default_instance() {
    return reinterpret_cast<const RoCCInstruction*>(
               &_RoCCInstruction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RoCCInstruction& a, RoCCInstruction& b) {
    a.Swap(&b);
  }
  inline void Swap(RoCCInstruction* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoCCInstruction* New() const final {
    return CreateMaybeMessage<RoCCInstruction>(nullptr);
  }

  RoCCInstruction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoCCInstruction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoCCInstruction& from);
  void MergeFrom(const RoCCInstruction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoCCInstruction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "verif.RoCCInstruction";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoCC_2eproto);
    return ::descriptor_table_RoCC_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFunctFieldNumber = 1,
    kRs2FieldNumber = 2,
    kRs1FieldNumber = 3,
    kXdFieldNumber = 4,
    kXs1FieldNumber = 5,
    kXs2FieldNumber = 6,
    kRdFieldNumber = 7,
    kOpcodeFieldNumber = 8,
  };
  // uint32 funct = 1;
  void clear_funct();
  ::PROTOBUF_NAMESPACE_ID::uint32 funct() const;
  void set_funct(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_funct() const;
  void _internal_set_funct(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rs2 = 2;
  void clear_rs2();
  ::PROTOBUF_NAMESPACE_ID::uint32 rs2() const;
  void set_rs2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rs2() const;
  void _internal_set_rs2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 rs1 = 3;
  void clear_rs1();
  ::PROTOBUF_NAMESPACE_ID::uint32 rs1() const;
  void set_rs1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rs1() const;
  void _internal_set_rs1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool xd = 4;
  void clear_xd();
  bool xd() const;
  void set_xd(bool value);
  private:
  bool _internal_xd() const;
  void _internal_set_xd(bool value);
  public:

  // bool xs1 = 5;
  void clear_xs1();
  bool xs1() const;
  void set_xs1(bool value);
  private:
  bool _internal_xs1() const;
  void _internal_set_xs1(bool value);
  public:

  // bool xs2 = 6;
  void clear_xs2();
  bool xs2() const;
  void set_xs2(bool value);
  private:
  bool _internal_xs2() const;
  void _internal_set_xs2(bool value);
  public:

  // uint32 rd = 7;
  void clear_rd();
  ::PROTOBUF_NAMESPACE_ID::uint32 rd() const;
  void set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rd() const;
  void _internal_set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 opcode = 8;
  void clear_opcode();
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode() const;
  void set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_opcode() const;
  void _internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:verif.RoCCInstruction)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 funct_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rs2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rs1_;
  bool xd_;
  bool xs1_;
  bool xs2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rd_;
  ::PROTOBUF_NAMESPACE_ID::uint32 opcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoCC_2eproto;
};
// -------------------------------------------------------------------

class RoCCCommand :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:verif.RoCCCommand) */ {
 public:
  RoCCCommand();
  virtual ~RoCCCommand();

  RoCCCommand(const RoCCCommand& from);
  RoCCCommand(RoCCCommand&& from) noexcept
    : RoCCCommand() {
    *this = ::std::move(from);
  }

  inline RoCCCommand& operator=(const RoCCCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoCCCommand& operator=(RoCCCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoCCCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoCCCommand* internal_default_instance() {
    return reinterpret_cast<const RoCCCommand*>(
               &_RoCCCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RoCCCommand& a, RoCCCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(RoCCCommand* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoCCCommand* New() const final {
    return CreateMaybeMessage<RoCCCommand>(nullptr);
  }

  RoCCCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoCCCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoCCCommand& from);
  void MergeFrom(const RoCCCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoCCCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "verif.RoCCCommand";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoCC_2eproto);
    return ::descriptor_table_RoCC_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstFieldNumber = 1,
    kRs1FieldNumber = 2,
    kRs2FieldNumber = 3,
  };
  // .verif.RoCCInstruction inst = 1;
  bool has_inst() const;
  private:
  bool _internal_has_inst() const;
  public:
  void clear_inst();
  const ::verif::RoCCInstruction& inst() const;
  ::verif::RoCCInstruction* release_inst();
  ::verif::RoCCInstruction* mutable_inst();
  void set_allocated_inst(::verif::RoCCInstruction* inst);
  private:
  const ::verif::RoCCInstruction& _internal_inst() const;
  ::verif::RoCCInstruction* _internal_mutable_inst();
  public:

  // uint64 rs1 = 2;
  void clear_rs1();
  ::PROTOBUF_NAMESPACE_ID::uint64 rs1() const;
  void set_rs1(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_rs1() const;
  void _internal_set_rs1(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 rs2 = 3;
  void clear_rs2();
  ::PROTOBUF_NAMESPACE_ID::uint64 rs2() const;
  void set_rs2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_rs2() const;
  void _internal_set_rs2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:verif.RoCCCommand)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::verif::RoCCInstruction* inst_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rs1_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rs2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoCC_2eproto;
};
// -------------------------------------------------------------------

class RoCCResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:verif.RoCCResponse) */ {
 public:
  RoCCResponse();
  virtual ~RoCCResponse();

  RoCCResponse(const RoCCResponse& from);
  RoCCResponse(RoCCResponse&& from) noexcept
    : RoCCResponse() {
    *this = ::std::move(from);
  }

  inline RoCCResponse& operator=(const RoCCResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoCCResponse& operator=(RoCCResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RoCCResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoCCResponse* internal_default_instance() {
    return reinterpret_cast<const RoCCResponse*>(
               &_RoCCResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RoCCResponse& a, RoCCResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RoCCResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RoCCResponse* New() const final {
    return CreateMaybeMessage<RoCCResponse>(nullptr);
  }

  RoCCResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RoCCResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RoCCResponse& from);
  void MergeFrom(const RoCCResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoCCResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "verif.RoCCResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_RoCC_2eproto);
    return ::descriptor_table_RoCC_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kRdFieldNumber = 1,
  };
  // uint64 data = 2;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::uint64 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 rd = 1;
  void clear_rd();
  ::PROTOBUF_NAMESPACE_ID::uint32 rd() const;
  void set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rd() const;
  void _internal_set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:verif.RoCCResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_RoCC_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoCCCommandAck

// uint32 ack = 1;
inline void RoCCCommandAck::clear_ack() {
  ack_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCCommandAck::_internal_ack() const {
  return ack_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCCommandAck::ack() const {
  // @@protoc_insertion_point(field_get:verif.RoCCCommandAck.ack)
  return _internal_ack();
}
inline void RoCCCommandAck::_internal_set_ack(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ack_ = value;
}
inline void RoCCCommandAck::set_ack(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ack(value);
  // @@protoc_insertion_point(field_set:verif.RoCCCommandAck.ack)
}

// -------------------------------------------------------------------

// RoCCInstruction

// uint32 funct = 1;
inline void RoCCInstruction::clear_funct() {
  funct_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::_internal_funct() const {
  return funct_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::funct() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.funct)
  return _internal_funct();
}
inline void RoCCInstruction::_internal_set_funct(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  funct_ = value;
}
inline void RoCCInstruction::set_funct(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_funct(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.funct)
}

// uint32 rs2 = 2;
inline void RoCCInstruction::clear_rs2() {
  rs2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::_internal_rs2() const {
  return rs2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::rs2() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.rs2)
  return _internal_rs2();
}
inline void RoCCInstruction::_internal_set_rs2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rs2_ = value;
}
inline void RoCCInstruction::set_rs2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rs2(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.rs2)
}

// uint32 rs1 = 3;
inline void RoCCInstruction::clear_rs1() {
  rs1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::_internal_rs1() const {
  return rs1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::rs1() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.rs1)
  return _internal_rs1();
}
inline void RoCCInstruction::_internal_set_rs1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rs1_ = value;
}
inline void RoCCInstruction::set_rs1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rs1(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.rs1)
}

// bool xd = 4;
inline void RoCCInstruction::clear_xd() {
  xd_ = false;
}
inline bool RoCCInstruction::_internal_xd() const {
  return xd_;
}
inline bool RoCCInstruction::xd() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.xd)
  return _internal_xd();
}
inline void RoCCInstruction::_internal_set_xd(bool value) {
  
  xd_ = value;
}
inline void RoCCInstruction::set_xd(bool value) {
  _internal_set_xd(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.xd)
}

// bool xs1 = 5;
inline void RoCCInstruction::clear_xs1() {
  xs1_ = false;
}
inline bool RoCCInstruction::_internal_xs1() const {
  return xs1_;
}
inline bool RoCCInstruction::xs1() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.xs1)
  return _internal_xs1();
}
inline void RoCCInstruction::_internal_set_xs1(bool value) {
  
  xs1_ = value;
}
inline void RoCCInstruction::set_xs1(bool value) {
  _internal_set_xs1(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.xs1)
}

// bool xs2 = 6;
inline void RoCCInstruction::clear_xs2() {
  xs2_ = false;
}
inline bool RoCCInstruction::_internal_xs2() const {
  return xs2_;
}
inline bool RoCCInstruction::xs2() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.xs2)
  return _internal_xs2();
}
inline void RoCCInstruction::_internal_set_xs2(bool value) {
  
  xs2_ = value;
}
inline void RoCCInstruction::set_xs2(bool value) {
  _internal_set_xs2(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.xs2)
}

// uint32 rd = 7;
inline void RoCCInstruction::clear_rd() {
  rd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::_internal_rd() const {
  return rd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::rd() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.rd)
  return _internal_rd();
}
inline void RoCCInstruction::_internal_set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rd_ = value;
}
inline void RoCCInstruction::set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rd(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.rd)
}

// uint32 opcode = 8;
inline void RoCCInstruction::clear_opcode() {
  opcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::_internal_opcode() const {
  return opcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCInstruction::opcode() const {
  // @@protoc_insertion_point(field_get:verif.RoCCInstruction.opcode)
  return _internal_opcode();
}
inline void RoCCInstruction::_internal_set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  opcode_ = value;
}
inline void RoCCInstruction::set_opcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_opcode(value);
  // @@protoc_insertion_point(field_set:verif.RoCCInstruction.opcode)
}

// -------------------------------------------------------------------

// RoCCCommand

// .verif.RoCCInstruction inst = 1;
inline bool RoCCCommand::_internal_has_inst() const {
  return this != internal_default_instance() && inst_ != nullptr;
}
inline bool RoCCCommand::has_inst() const {
  return _internal_has_inst();
}
inline void RoCCCommand::clear_inst() {
  if (GetArenaNoVirtual() == nullptr && inst_ != nullptr) {
    delete inst_;
  }
  inst_ = nullptr;
}
inline const ::verif::RoCCInstruction& RoCCCommand::_internal_inst() const {
  const ::verif::RoCCInstruction* p = inst_;
  return p != nullptr ? *p : *reinterpret_cast<const ::verif::RoCCInstruction*>(
      &::verif::_RoCCInstruction_default_instance_);
}
inline const ::verif::RoCCInstruction& RoCCCommand::inst() const {
  // @@protoc_insertion_point(field_get:verif.RoCCCommand.inst)
  return _internal_inst();
}
inline ::verif::RoCCInstruction* RoCCCommand::release_inst() {
  // @@protoc_insertion_point(field_release:verif.RoCCCommand.inst)
  
  ::verif::RoCCInstruction* temp = inst_;
  inst_ = nullptr;
  return temp;
}
inline ::verif::RoCCInstruction* RoCCCommand::_internal_mutable_inst() {
  
  if (inst_ == nullptr) {
    auto* p = CreateMaybeMessage<::verif::RoCCInstruction>(GetArenaNoVirtual());
    inst_ = p;
  }
  return inst_;
}
inline ::verif::RoCCInstruction* RoCCCommand::mutable_inst() {
  // @@protoc_insertion_point(field_mutable:verif.RoCCCommand.inst)
  return _internal_mutable_inst();
}
inline void RoCCCommand::set_allocated_inst(::verif::RoCCInstruction* inst) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inst_;
  }
  if (inst) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      inst = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, inst, submessage_arena);
    }
    
  } else {
    
  }
  inst_ = inst;
  // @@protoc_insertion_point(field_set_allocated:verif.RoCCCommand.inst)
}

// uint64 rs1 = 2;
inline void RoCCCommand::clear_rs1() {
  rs1_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCCommand::_internal_rs1() const {
  return rs1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCCommand::rs1() const {
  // @@protoc_insertion_point(field_get:verif.RoCCCommand.rs1)
  return _internal_rs1();
}
inline void RoCCCommand::_internal_set_rs1(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  rs1_ = value;
}
inline void RoCCCommand::set_rs1(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_rs1(value);
  // @@protoc_insertion_point(field_set:verif.RoCCCommand.rs1)
}

// uint64 rs2 = 3;
inline void RoCCCommand::clear_rs2() {
  rs2_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCCommand::_internal_rs2() const {
  return rs2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCCommand::rs2() const {
  // @@protoc_insertion_point(field_get:verif.RoCCCommand.rs2)
  return _internal_rs2();
}
inline void RoCCCommand::_internal_set_rs2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  rs2_ = value;
}
inline void RoCCCommand::set_rs2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_rs2(value);
  // @@protoc_insertion_point(field_set:verif.RoCCCommand.rs2)
}

// -------------------------------------------------------------------

// RoCCResponse

// uint32 rd = 1;
inline void RoCCResponse::clear_rd() {
  rd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCResponse::_internal_rd() const {
  return rd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RoCCResponse::rd() const {
  // @@protoc_insertion_point(field_get:verif.RoCCResponse.rd)
  return _internal_rd();
}
inline void RoCCResponse::_internal_set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rd_ = value;
}
inline void RoCCResponse::set_rd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rd(value);
  // @@protoc_insertion_point(field_set:verif.RoCCResponse.rd)
}

// uint64 data = 2;
inline void RoCCResponse::clear_data() {
  data_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCResponse::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RoCCResponse::data() const {
  // @@protoc_insertion_point(field_get:verif.RoCCResponse.data)
  return _internal_data();
}
inline void RoCCResponse::_internal_set_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  data_ = value;
}
inline void RoCCResponse::set_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:verif.RoCCResponse.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace verif

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_RoCC_2eproto
